"use strict";
/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Imperative_1 = require("../../Imperative");
const constants_1 = require("../../../../constants");
const profiles_1 = require("../../../../profiles");
class NewDeleteProfilesHandler {
    process(commandParameters) {
        return __awaiter(this, void 0, void 0, function* () {
            const profileType = commandParameters.definition.customize[profiles_1.ProfilesConstants.PROFILES_COMMAND_TYPE_KEY];
            const profileName = commandParameters.arguments[constants_1.Constants.PROFILE_NAME_OPTION];
            const deleted = yield Imperative_1.Imperative.api.profileManager(profileType).delete({
                name: profileName,
                rejectIfDependency: !commandParameters.arguments.force || false
            });
            if (!deleted.defaultCleared) {
                commandParameters.response.console.log(`Your profile named ${profileName} of type ${profileType} was successfully deleted.`);
            }
            else {
                commandParameters.response.console.log(`Your default profile named ${profileName} of type ${profileType} was successfully deleted.\n` +
                    `Because you deleted it, the default profile for type ${profileType} has been cleared.\nTo set a new default profile, run "zowe ` +
                    `profiles set-default ${profileType} <profileName>".`);
            }
        });
    }
}
exports.default = NewDeleteProfilesHandler;
//# sourceMappingURL=NewDeleteProfilesHandler.js.map